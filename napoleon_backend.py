# -*- coding: utf-8 -*-
"""napoleon_Backend.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/161s4r4gUAmWIJy4VYowGPiBvQg-W6zQB
"""

class Solution:
  def __init__(self):
        #self.roman = rom
        self.integers = dict(I=1, V=5, X=10, L=50, C=100, D=500, M=1000) 

  def romanToInt(self, roman):
    result = 0  
    integers = self.integers
    for i in range(len(roman)): 
      if i<len(roman)-1: 
        if integers[roman[i]] < integers[roman[i+1]]:
          result-= integers[roman[i]]            
        else:
          result+=integers[roman[i]]  
      else:
        result+=integers[roman[i]]              
    return str(result)  

test = ["III","IV","IX","LVIII", "MCMXCIV"]          
roma = Solution()
for rom in test:  
  print(roma.romanToInt(rom))

